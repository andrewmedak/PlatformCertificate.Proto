using Google.Protobuf.Reflection;

// Joining the namespace with the Oids class generated by protobuf
namespace OidsProto
{
    public class OidsUtils
    {
        // Considered using an extension method.
        // Found it would add the extension to any Enum value, and I thought that would be more confusing than helpful.
        public static ObjectIdentifier Find(Enum oidsEnum)
        {
            ObjectIdentifier oid = new();

            string enumName = oidsEnum.GetType().Name;
            int enumValue = Convert.ToInt32(oidsEnum);
            EnumDescriptor enumDescriptor = OidsReflection.Descriptor.FindTypeByName<EnumDescriptor>(enumName);
            if (enumDescriptor == null) {
                return oid;
            }

            EnumValueDescriptor enumValueDescriptor = enumDescriptor.FindValueByNumber(enumValue);
            if (enumValueDescriptor == null)
            {
                return oid;
            }

            oid = enumValueDescriptor.GetOptions().GetExtension<ObjectIdentifier>(OidsExtensions.Oid);
            
            return oid;
        }
    }
}
